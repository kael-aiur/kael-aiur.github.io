I"	<ul id="markdown-toc">
  <li><a href="#前言" id="markdown-toc-前言">前言</a></li>
  <li><a href="#准备工作" id="markdown-toc-准备工作">准备工作</a></li>
  <li><a href="#获取redis镜像" id="markdown-toc-获取redis镜像">获取redis镜像</a></li>
  <li><a href="#运行redis镜像" id="markdown-toc-运行redis镜像">运行redis镜像</a></li>
  <li><a href="#连接redis" id="markdown-toc-连接redis">连接redis</a>    <ul>
      <li><a href="#安装redis-cli" id="markdown-toc-安装redis-cli">安装redis-cli</a></li>
    </ul>
  </li>
  <li><a href="#连接docker-redis" id="markdown-toc-连接docker-redis">连接docker-redis</a></li>
  <li><a href="#允许物理机连接" id="markdown-toc-允许物理机连接">允许物理机连接</a></li>
</ul>

<h2 id="前言">前言</h2>

<p>docker的官方镜像提供了redis的镜像，为了方便自己随时随地需要的使用，就学习一下，顺便记录下来。</p>

<p>参考<a href="https://hub.docker.com/_/redis/">Docker官方Redis镜像</a></p>

<h2 id="准备工作">准备工作</h2>

<ul>
  <li>一台linux机器（我用windows10自带的hyper-v装了个虚拟机）</li>
  <li>安装docker</li>
</ul>

<h2 id="获取redis镜像">获取redis镜像</h2>

<p>一行命令搞定：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; docker pull redis
</code></pre></div></div>

<blockquote>
  <p><strong>说明：</strong> docker的官方镜像都可以在<a href="https://hub.docker.com/">Docker Hub</a>上找到，这里会自动从<a href="https://hub.docker.com/">Docker Hub</a>
上找到对应的镜像并下载。</p>
</blockquote>

<p>下载完成之后，可以使用如下命令查看镜像：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; docker images

REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
redis               latest              1fb7b6c8c0d0        6 days ago          107MB (1)
oraclelinux         latest              6c33a25f4a29        2 weeks ago         229MB
elasticsearch       latest              d1ac13423d3c        5 weeks ago         580MB
hello-world         latest              1815c82652c0        4 months ago        1.84kB
</code></pre></div></div>

<blockquote>
  <p><strong>(1).</strong> 这个就是我们刚刚获取的镜像。</p>
</blockquote>

<h2 id="运行redis镜像">运行redis镜像</h2>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; docker run --name my-redis -d redis
7dabbc56e3514e9ba1705d6c6ec180e603ceff7e6011f7915ef3b0f1f5b05b35
</code></pre></div></div>

<p>启动后可以查看redis运行的信息：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
7dabbc56e351        redis               "docker-entrypoint..."   35 minutes ago      Up 35 minutes       6379/tcp            my-redis
</code></pre></div></div>

<h2 id="连接redis">连接redis</h2>

<p>在虚拟机中，没有ui工具可以连接redis，要测试redis是否正常服务，需要安装redis的命令行客户端工具(redis-cli)。</p>

<h3 id="安装redis-cli">安装redis-cli</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; wget http://download.redis.io/releases/redis-2.8.17.tar.gz
$&gt; tar xzf redis-2.8.17.tar.gz
$&gt; cd redis-2.8.17
$&gt; make
</code></pre></div></div>

<blockquote>
  <p><strong>注意:</strong> 这里是下载redis源码进行编译，编译后在<code class="highlighter-rouge">src</code>目录下就会有<code class="highlighter-rouge">redis-cli</code>工具。
源码编译过程需要使用gcc，如果没有安装的话请先用yum或者apt-get安装gcc。
如：<code class="highlighter-rouge">yum install gcc</code>或<code class="highlighter-rouge">apt-get install gcc</code>。</p>
</blockquote>

<p>编译完成后：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; cd src
$&gt; ./redis-cli
Could not connect to Redis at 127.0.0.1:6379: Connection refused
not connected&gt; 
</code></pre></div></div>

<p>说明已经编译完成，可以使用了。</p>

<p>由于没有参数的情况下，默认是连接<code class="highlighter-rouge">127.0.0.1:6379</code>，这里连接失败了，先退出cli：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>not connected&gt; exit
</code></pre></div></div>

<h2 id="连接docker-redis">连接docker-redis</h2>

<p>现在我们需要知道docker中的redis的IP地址：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; docker inspect --format '{{ .NetworkSettings.IPAddress }}' ${容器id}
</code></pre></div></div>

<blockquote>
  <p>容器id我们前面已经用<code class="highlighter-rouge">docker ps</code>看到了，拷贝过来替换掉<code class="highlighter-rouge">${容器id}</code>。</p>
</blockquote>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; docker inspect --format '{{ .NetworkSettings.IPAddress }}' 7dabbc56e351
172.17.0.2
</code></pre></div></div>

<p>连接：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; ./redis-cli -h 172.17.0.2
172.17.0.2:6379&gt; 
</code></pre></div></div>

<blockquote>
  <p>不需要指定端口，使用默认端口6379即可。</p>
</blockquote>

<p>正常连接上了，现在测试一下：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>172.17.0.2:6379&gt; set first:key "hello redis"
OK
172.17.0.2:6379&gt; get first:key
"hello redis"
172.17.0.2:6379&gt; 
</code></pre></div></div>

<p>成功！</p>

<h2 id="允许物理机连接">允许物理机连接</h2>

<p>上面成功连接之后，说明我们已经可以正常使用redis了，但是实际上这不是我们想要的效果，因为只能在虚拟机内连接，我们希望可以在物理机上连接，这样才可以进行开发。</p>

<p>现在让我们先停掉虚拟机里的dcoker:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; docker stop ${容器id}
</code></pre></div></div>

<p>现在重新启动docker的redis镜像，同时指定主机端口映射容器端口：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; docker run -p 6379:6379 --name port-map-redis -d redis
</code></pre></div></div>

<p>现在使用redis-cli直接连接本地：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; ./redis-cli
127.0.0.1:6379&gt;
</code></pre></div></div>

<p>说明连接本地成功。</p>
:ET