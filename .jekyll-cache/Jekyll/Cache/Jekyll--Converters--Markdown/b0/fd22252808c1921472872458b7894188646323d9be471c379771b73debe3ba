I" B<ul id="markdown-toc">
  <li><a href="#leap介绍" id="markdown-toc-leap介绍">leap介绍</a></li>
  <li><a href="#leap的环境搭建" id="markdown-toc-leap的环境搭建">leap的环境搭建</a>    <ul>
      <li><a href="#新建pomxml文件" id="markdown-toc-新建pomxml文件">新建pom.xml文件</a></li>
      <li><a href="#初始化maven目录结构" id="markdown-toc-初始化maven目录结构">初始化maven目录结构</a></li>
      <li><a href="#新建配置文件" id="markdown-toc-新建配置文件">新建配置文件</a></li>
      <li><a href="#创建对应的类" id="markdown-toc-创建对应的类">创建对应的类</a></li>
      <li><a href="#创建webxml和indexhtml" id="markdown-toc-创建webxml和indexhtml">创建<code class="highlighter-rouge">web.xml</code>和<code class="highlighter-rouge">index.html</code></a></li>
    </ul>
  </li>
</ul>

<h2 id="leap介绍">leap介绍</h2>

<p>leap是一个java web应用开发框架，全称是Light Enterprise Application Platform。主要定位是企业应用和互联网应用开发框架。</p>

<p>简单一点说，就是类似目前流行的Spring + Struts + Hibernate或者Spring + Struts + Mybatis的框架。</p>

<p>不过leap比上面的两个组合框架有几点好处:</p>

<ul>
  <li>更轻量</li>
  <li>内置各模块深度整合</li>
  <li>更统一的编码风格</li>
  <li>环境搭建更简单</li>
</ul>

<p>关于leap的更多介绍和详细信息，可以在<a href="http://leapframework.org/">官网</a>看到。</p>

<h2 id="leap的环境搭建">leap的环境搭建</h2>

<p>为了让大家更了解leap的文档结构，我先从搭建完成后的leap开发工程的目录结构说起吧，如下：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>leap
  ┣━ src
  ┃   ┣━ main
  ┃   ┃    ┣━ java
  ┃   ┃    ┃    ┗━ app
  ┃   ┃    ┃        ┗━ test
  ┃   ┃    ┃            ┣━ Global.java
  ┃   ┃    ┃            ┗━ controller
  ┃   ┃    ┃                   ┗━ HomeController.java
  ┃   ┃    ┣━ resources
  ┃   ┃    ┃     ┗━ conf
  ┃   ┃    ┃         ┣━ beans.xml
  ┃   ┃    ┃         ┗━ config.xml
  ┃   ┃    ┗━ webapp
  ┃   ┃         ┗━ WEB-INF
  ┃   ┃              ┣━ views
  ┃   ┃              ┃    ┗━ index.html
  ┃   ┃              ┗━ web.xml
  ┃   ┗━ test
  ┃        ┣━ java
  ┃        ┗━ resources
  ┃        
  ┗━ pom.xml
</code></pre></div></div>

<p>可以看到这是一个标准的maven工程目录结构。</p>

<p>接下来我们一步一步来新建这样的工程目录。</p>

<h3 id="新建pomxml文件">新建pom.xml文件</h3>

<p>在准备开发的目录新建一个文件夹，名称可以随意定，建议是工程名，这里我们假设创建的工程目录名为leap。</p>

<p>在leap目录下创建pom.xml，内容如下:</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">"http://maven.apache.org/POM/4.0.0"</span>
         <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
         <span class="na">xsi:schemaLocation=</span><span class="s">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>

    <span class="nt">&lt;groupId&gt;</span>leap.test<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>leap-test-0.2.0b<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;version&gt;</span>0.2.0b<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;packaging&gt;</span>war<span class="nt">&lt;/packaging&gt;</span>
    <span class="nt">&lt;repositories&gt;</span>
        <span class="c">&lt;!-- leap快照资源库 --&gt;</span>
        <span class="nt">&lt;repository&gt;</span>
            <span class="nt">&lt;id&gt;</span>leap-snapshots<span class="nt">&lt;/id&gt;</span>
            <span class="nt">&lt;url&gt;</span>https://raw.githubusercontent.com/leapframework/repo/master/snapshots<span class="nt">&lt;/url&gt;</span>
            <span class="nt">&lt;snapshots&gt;</span>
                <span class="nt">&lt;enabled&gt;</span>true<span class="nt">&lt;/enabled&gt;</span>
                <span class="nt">&lt;updatePolicy&gt;</span>always<span class="nt">&lt;/updatePolicy&gt;</span>
                <span class="nt">&lt;checksumPolicy&gt;</span>warn<span class="nt">&lt;/checksumPolicy&gt;</span>
            <span class="nt">&lt;/snapshots&gt;</span>
        <span class="nt">&lt;/repository&gt;</span>

        <span class="nt">&lt;repository&gt;</span>
            <span class="nt">&lt;id&gt;</span>leap-releases<span class="nt">&lt;/id&gt;</span>
            <span class="nt">&lt;url&gt;</span>https://raw.githubusercontent.com/leapframework/repo/master/releases<span class="nt">&lt;/url&gt;</span>
            <span class="nt">&lt;releases&gt;</span>
                <span class="nt">&lt;enabled&gt;</span>true<span class="nt">&lt;/enabled&gt;</span>
                <span class="nt">&lt;updatePolicy&gt;</span>never<span class="nt">&lt;/updatePolicy&gt;</span>
                <span class="nt">&lt;checksumPolicy&gt;</span>warn<span class="nt">&lt;/checksumPolicy&gt;</span>
            <span class="nt">&lt;/releases&gt;</span>
        <span class="nt">&lt;/repository&gt;</span>
    <span class="nt">&lt;/repositories&gt;</span>
    <span class="nt">&lt;dependencies&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.leapframework<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>leap<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>0.2.0b<span class="nt">&lt;/version&gt;</span>
            <span class="nt">&lt;type&gt;</span>pom<span class="nt">&lt;/type&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.h2database<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>h2<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>1.3.172<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;/dependencies&gt;</span>

<span class="nt">&lt;/project&gt;</span>
</code></pre></div></div>

<p>这里我们依赖leap的0.2.0b的版本，需要注意的是，leap目前还没有发布到maven的中心库，使用的是自己搭建的maven库，因此需要配置maven的leap资源库。</p>

<h3 id="初始化maven目录结构">初始化maven目录结构</h3>

<p>接下来我们按照maven工程的目录结构创建相应的文件夹:</p>

<ul>
  <li>src/main/java</li>
  <li>src/main/resource</li>
  <li>src/main/webapp</li>
  <li>src/test/java</li>
  <li>src/test/resource</li>
</ul>

<p>创建完成以上几个目录后，maven的目录结构已经创建好了。</p>

<h3 id="新建配置文件">新建配置文件</h3>

<p>leap有非常强的扩展性，同时必须配置的配置项也非常少，本文只介绍必须的配置项，更多配置项可以从<a href="http://leapframework.org/doc/index.html">官方文档</a>里看。</p>

<p>我们在<code class="highlighter-rouge">src/main/resource</code>下创建<code class="highlighter-rouge">conf</code>目录，这个目录是leap约定的配置目录，不能改变。
在conf下创建两个配置文件<code class="highlighter-rouge">beans.xml</code>和<code class="highlighter-rouge">config.xml</code>，内容如下：</p>

<p>config.xml</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;config</span> <span class="na">xmlns=</span><span class="s">"http://www.leapframework.org/schema/config"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;base-package&gt;</span>app.test<span class="nt">&lt;/base-package&gt;</span>
    <span class="nt">&lt;properties&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"jdbc.driverClassName"</span><span class="nt">&gt;</span>org.h2.Driver<span class="nt">&lt;/property&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"jdbc.url"</span><span class="nt">&gt;</span>jdbc:h2:./target/test;DB_CLOSE_ON_EXIT=FALSE<span class="nt">&lt;/property&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"jdbc.username"</span><span class="nt">&gt;</span>sa<span class="nt">&lt;/property&gt;</span>
    <span class="nt">&lt;/properties&gt;</span>
<span class="nt">&lt;/config&gt;</span>
</code></pre></div></div>

<p>beans.xml</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;beans</span> <span class="na">xmlns=</span><span class="s">"http://www.leapframework.org/schema/beans"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;bean</span> <span class="na">type=</span><span class="s">"javax.sql.DataSource"</span> <span class="na">class=</span><span class="s">"leap.db.cp.PooledDataSource"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"driverClassName"</span> <span class="na">value=</span><span class="s">"${jdbc.driverClassName}"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"jdbcUrl"</span>         <span class="na">value=</span><span class="s">"${jdbc.url}"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"username"</span>        <span class="na">value=</span><span class="s">"${jdbc.username}"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"password"</span>        <span class="na">value=</span><span class="s">"${jdbc.password}"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/bean&gt;</span>
<span class="nt">&lt;/beans&gt;</span>
</code></pre></div></div>

<p>这里我配置了一些基本的属性，最核心的配置其实只有一项<code class="highlighter-rouge">&lt;base-package&gt;app.test&lt;/base-package&gt;</code>，这一项配置是必须的，表示的是leap扫描包的根目录，其他的配置在不需要数据库的时候可以省略。</p>

<p>这里config.xml一般用于配置一些经常变化的属性，beans.xml用于配置leap ioc容器中的bean。</p>

<h3 id="创建对应的类">创建对应的类</h3>

<p>我们先在<code class="highlighter-rouge">src/main/java</code>下创建包<code class="highlighter-rouge">app.test</code>和<code class="highlighter-rouge">app.test.controller</code>。</p>

<p>然后在包<code class="highlighter-rouge">app.test</code>下创建<code class="highlighter-rouge">Global.java</code>，内容如下：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">app.test</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">leap.web.App</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Global</span> <span class="kd">extends</span> <span class="nc">App</span> <span class="o">{</span>
<span class="o">}</span>

</code></pre></div></div>

<p>这里<code class="highlighter-rouge">leap.web.App</code>是leap提供的类，一般我们会在自己的工程的<code class="highlighter-rouge">base-package</code>下创建<code class="highlighter-rouge">Global</code>类并继承这个类来做应用的初始化，应用初始化通过重写<code class="highlighter-rouge">App</code>类的<code class="highlighter-rouge">init()</code>方法来实现，当然这不是必须的。</p>

<p>接下来我们在包<code class="highlighter-rouge">app.test.controller</code>下创建<code class="highlighter-rouge">HomeController.java</code>类，内容如下：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">leap.test.controller</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">leap.web.action.ControllerBase</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">leap.web.view.ViewData</span><span class="o">;</span>

<span class="cm">/**
 * Created by kael on 2016/7/8.
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">HomeController</span> <span class="kd">extends</span> <span class="nc">ControllerBase</span> <span class="o">{</span>


    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">index</span><span class="o">(</span><span class="nc">ViewData</span> <span class="n">vd</span><span class="o">){</span>
        
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<p>这个类是leap的控制器，实际上，leap会把所有类名后缀为<code class="highlighter-rouge">Controller</code>的类当成控制器，并把控制器下所有的公共方法当成http url接口。默认控制器的根就是<code class="highlighter-rouge">index()</code>方法。</p>

<h3 id="创建webxml和indexhtml">创建<code class="highlighter-rouge">web.xml</code>和<code class="highlighter-rouge">index.html</code></h3>

<p>我们知道，web.xml是web应用中必须的描述文件(在servlet 3.0以后不再是必须的)。leap的入口也是在web.xml中配置的。
我们在<code class="highlighter-rouge">src/webapp</code>下创建<code class="highlighter-rouge">WEB-INF</code>目录，并在<code class="highlighter-rouge">WEB-INF</code>目录下创建<code class="highlighter-rouge">web.xml</code>，内容如下:</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;web-app</span> <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
         <span class="na">xmlns=</span><span class="s">"http://java.sun.com/xml/ns/javaee"</span>
         <span class="na">xsi:schemaLocation=</span><span class="s">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span>
         <span class="na">version=</span><span class="s">"3.0"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;filter&gt;</span>
        <span class="nt">&lt;filter-name&gt;</span>app-filter<span class="nt">&lt;/filter-name&gt;</span>
        <span class="nt">&lt;filter-class&gt;</span>leap.web.AppFilter<span class="nt">&lt;/filter-class&gt;</span>
    <span class="nt">&lt;/filter&gt;</span>
    <span class="nt">&lt;filter-mapping&gt;</span>
        <span class="nt">&lt;filter-name&gt;</span>app-filter<span class="nt">&lt;/filter-name&gt;</span>
        <span class="nt">&lt;url-pattern&gt;</span>/*<span class="nt">&lt;/url-pattern&gt;</span>
    <span class="nt">&lt;/filter-mapping&gt;</span>
<span class="nt">&lt;/web-app&gt;</span>
</code></pre></div></div>

<p>这里需要指定用leap的拦截器接管所有请求。</p>

<p>然后我们再创建第一个视图文件，在<code class="highlighter-rouge">WEB-INF</code>下创建<code class="highlighter-rouge">views</code>目录，并在<code class="highlighter-rouge">views</code>下创建<code class="highlighter-rouge">index.html</code>文件，内容如下:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>test<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
Hello leap!
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>到这里我们整个工程目录已经创建成功，只要把工程导入到ide内即可开始leap开发。当然，如果你熟悉的话，也可以直接在ide内搭建这个开发环境。</p>

:ET