I"b<ul id="markdown-toc">
  <li><a href="#前言" id="markdown-toc-前言">前言</a></li>
  <li><a href="#自签名证书" id="markdown-toc-自签名证书">自签名证书</a>    <ul>
      <li><a href="#生成证书库" id="markdown-toc-生成证书库">生成证书库</a></li>
    </ul>
  </li>
  <li><a href="#配置证书" id="markdown-toc-配置证书">配置证书</a></li>
</ul>

<h2 id="前言">前言</h2>

<p>本文主要记录如何将nginx配置为https反向代理</p>

<h2 id="自签名证书">自签名证书</h2>

<p>在配置https之前，我们需要先准备好证书文件，nginx需要两个证书文件：pem和key。</p>

<p>如果你已经有申请好的根证书，则忽略本步骤，如果没有证书，需要自签名，则按照本步骤生成自己的证书。</p>

<blockquote>
  <p>这里生成证书使用的是openssl和jdk中的keytool，如果没有请先自行安装这两个工具。</p>
</blockquote>

<h3 id="生成证书库">生成证书库</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; keytool -genkey -alias nginx -keyalg RSA -keystore nginx.jks
输入密钥库口令:  
再次输入新口令: 
您的名字与姓氏是什么?
  [Unknown]:  127.0.0.1
您的组织单位名称是什么?
  [Unknown]:  bingo 
您的组织名称是什么?
  [Unknown]:  bingo
您所在的城市或区域名称是什么?
  [Unknown]:  gz
您所在的省/市/自治区名称是什么?
  [Unknown]:  gd
该单位的双字母国家/地区代码是什么?
  [Unknown]:  cn
CN=127.0.0.1, OU=bingo, O=bingo, L=gz, ST=gd, C=cn是否正确?
  [否]:  y

输入 &lt;nginx&gt; 的密钥口令
	(如果和密钥库口令相同, 按回车):  
再次输入新口令: 

Warning:
JKS 密钥库使用专用格式。建议使用 "keytool -importkeystore -srckeystore nginx.jks -destkeystore nginx.jks -deststoretype pkcs12" 迁移到行业标准格式 PKCS12。
</code></pre></div></div>

<blockquote>
  <p>说明： 这里所有输入密钥的地方，全部以<code class="highlighter-rouge">changeit</code>为例。
需要注意的是，由于证书和域名是绑定的，因此<code class="highlighter-rouge">您的名字与姓氏是什么?</code>这里，需要输入nginx的访问域名或者ip地址，其他值随意。</p>
</blockquote>

<p>上面的步骤执行完成之后，在当前目录会生成一个证书库文件<code class="highlighter-rouge">nginx.jks</code>，接下来从这个证书库中提取证书文件：</p>

<p>首先转换证书格式为p12:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; keytool -importkeystore -srckeystore nginx.jks -destkeystore nginx.p12 -srcalias nginx -srcstoretype jks -deststoretype pkcs12
正在将密钥库 nginx.jks 导入到 nginx.p12...
输入目标密钥库口令:  
再次输入新口令: 
输入源密钥库口令:  
</code></pre></div></div>

<blockquote>
  <p>三次口令全部输入<code class="highlighter-rouge">changeit</code>。</p>
</blockquote>

<p>得到p12证书文件。</p>

<p>将p12证书文件转换为pem文件：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; openssl pkcs12 -in nginx.p12 -out nginx.pem
Enter Import Password:
MAC verified OK
Enter PEM pass phrase:
Verifying - Enter PEM pass phrase:
</code></pre></div></div>

<blockquote>
  <p>三次口令全部输入<code class="highlighter-rouge">changeit</code>。</p>
</blockquote>

<p>从pem文件提取key文件：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$&gt; openssl rsa -in nginx.pem -out nginx.key
Enter pass phrase for nginx.pem:
writing RSA key
</code></pre></div></div>

<blockquote>
  <p>口令输入<code class="highlighter-rouge">changeit</code>。</p>
</blockquote>

<p>到这里我们就得到<code class="highlighter-rouge">nginx.pem</code>和<code class="highlighter-rouge">nginx.key</code>文件了。</p>

<h2 id="配置证书">配置证书</h2>

<p>这里以nginx 1.14为例。</p>

<p>在<code class="highlighter-rouge">/etc/nginx/nginx.conf</code>中，包含如下配置：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http {
    ## ...
	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}
</code></pre></div></div>

<p>这里表示加载<code class="highlighter-rouge">/etc/nginx/conf.d</code>目录和<code class="highlighter-rouge">/etc/nginx/sites-enabled/</code>目录的配置，在<code class="highlighter-rouge">/etc/nginx/sites-enabled/</code>目录下，<code class="highlighter-rouge">default</code>配置了默认的80端口服务，如果不需要，建议删除<code class="highlighter-rouge">default</code>配置文件。</p>

<p>在<code class="highlighter-rouge">/etc/nginx/conf.d</code>增加配置文件<code class="highlighter-rouge">server.conf</code>:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>server {
	listen 8443 ssl;
	ssl_certificate /etc/nginx/conf.d/cert/nginx.pem; # pem证书文件位置
	ssl_certificate_key /etc/nginx/conf.d/cert/nginx.key; # key证书文件位置

	server_name 127.0.0.1; # 服务名，注意和证书申请的`您的名字与姓氏是什么?`保持一致
	location /iamsso {
		proxy_pass http://127.0.0.1:8089/iamsso;
	}
	location /iamapi {
		proxy_pass http://127.0.0.1:8087/iamapi;
	}
}
</code></pre></div></div>

<p>如上配置，即可实现如下转发：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://127.0.0.1:8443/iamsso -&gt; http://127.0.0.1:8089/iamsso
https://127.0.0.1:8443/iamapi -&gt; http://127.0.0.1:8087/iamapi
</code></pre></div></div>
:ET